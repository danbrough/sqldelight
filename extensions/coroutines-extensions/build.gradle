import org.jetbrains.kotlin.konan.target.HostManager

plugins {
  alias(libs.plugins.publish)
  alias(libs.plugins.dokka)
  id("app.cash.sqldelight.multiplatform")
}

archivesBaseName = 'sqldelight-coroutines-extensions'

kotlin {
  js()

  sourceSets {
    commonMain {
      dependencies {
        api project(':runtime')
        api libs.kotlin.coroutines.core
        implementation project(":extensions:async-extensions")
      }
    }
    commonTest {
      dependencies {
        implementation libs.kotlin.test.common
        implementation libs.kotlin.test.commonAnnotations
        //implementation libs.turbine
      }
    }
    jvmTest {
      dependencies {
        implementation libs.kotlin.test.junit
        implementation libs.kotlin.coroutines.test
        implementation project(':drivers:sqlite-driver')
      }
    }
    jsTest {
      dependencies {
        implementation libs.kotlin.test.js
        implementation project(':drivers:sqljs-driver')
      }
    }
    nativeTest {
      dependencies {
        implementation project(':drivers:native-driver')
      }
    }
  }

  configure([targets.iosX64, targets.iosArm32, targets.iosArm64, targets.tvosX64, targets.tvosArm64, targets.watchosX86, targets.watchosX64, targets.watchosArm32, targets.watchosArm64, targets.macosX64, targets.linuxX64, targets.linuxArm32Hfp,targets.linuxArm64,targets.androidNativeArm32, targets.androidNativeArm64,targets.androidNativeX86,targets.androidNativeX64,targets.macosArm64, targets.iosSimulatorArm64, targets.watchosSimulatorArm64, targets.tvosSimulatorArm64]) {
    compilations.test {
      kotlinOptions.freeCompilerArgs += ['-linker-options', '-lsqlite3 -L/usr/lib/x86_64-linux-gnu -L/usr/lib -L/usr/lib64']
    }
  }

  // mingwX86 target is not supported by kotlinx.coroutines, see https://github.com/Kotlin/kotlinx.coroutines/issues/2157
  configure([targets.mingwX64]) {
    compilations.test {
      kotlinOptions.freeCompilerArgs += ["-linker-options", "-Lc:\\msys64\\mingw64\\lib -L$rootDir\\libs -lsqlite3".toString()]
    }
  }

  sourceSets.matching { it.name.endsWith("Test") }.all {
    it.languageSettings {
      optIn('kotlin.time.ExperimentalTime')
      optIn('kotlinx.coroutines.ExperimentalCoroutinesApi')
    }
  }
}

apply from: "$rootDir/gradle/gradle-mvn-push.gradle"
